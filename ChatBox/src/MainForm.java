import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.zip.Deflater;

public class MainForm extends JFrame {
    private JScrollPane ContactScroll;
    private JButton AffAnnButt;
    private JButton ChangerPseudoButt;
    private JButton DeconnexionButt;
    private JPanel PaneHead;
    private JPanel PaneCenter;
    private JPanel mainPanel;
    private JLabel nameLabel;
    private JList<Object> list1;
    private JScrollPane paneContact;
    private JScrollPane paneMessages;
    private JList list2;
    private JButton button1;
    private JTextArea textArea1;
    private DefaultListModel messageModel = new DefaultListModel();

    // private ArrayList<String> arrMsgStr = new ArrayList<>();


    private JTable table1;


    public MainForm() {

        $$$setupUI$$$();
        setContentPane(mainPanel);
        setTitle("ChatApp");
        DatabaseManager Db = new DatabaseManager();

        //Connection connection = Db.conn;
        Db.dbinit();
        ArrayList<String> asAnnu = Db.getAnnuaireList();
        setSize(800, 600);
        DefaultListModel messageModel = new DefaultListModel();
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        DefaultListModel lm1 = new DefaultListModel();
        list1 = new JList<>(asAnnu.toArray());
        paneContact.add(list1);
        list2 = new JList(messageModel);
        paneMessages.add(list2);
        list1.setEnabled(true);
        list2.setEnabled(true);
        paneContact.setEnabled(true);
        paneMessages.setEnabled(false);

        setVisible(true);

    }

    public static void main(String[] args) {
        MainForm myForm = new MainForm();

    }

    private void createUIComponents() {
        DatabaseManager Db = new DatabaseManager();

        Db.dbinit();
        ArrayList<String> asAnnu = Db.getAnnuaireList();
        setSize(800, 600);
        list1 = new JList<Object>(asAnnu.toArray());

        System.out.println("asAnnu!");
        if (messageModel == null) {
            messageModel = new DefaultListModel();
        }

        list2 = new JList(messageModel);


        list1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel)e.getSource();
                //messageModel = initLM(Db.ArrayHistorywithX(4,6));
                messageModel.addElement("HEEEEEEY");

                System.out.println(asAnnu.get(((ListSelectionModel) e.getSource()).getSelectedIndices()[0]));

            }
        });
        list1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                //super.mouseClicked(e);
                if (e.getClickCount() == 2) {
                    System.out.println(e.getID());
                    ArrayList conv = Db.ArrayHistorywithX(4,e.getID());
                    System.out.println("CLICK");
                    messageModel = initLM(conv);

                }

            }
        });
        list1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    System.out.println("e.getSource()");
                }
            }
        });


        //paneContact.add(list1);

        // TODO: place custom component creation code here
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setEnabled(true);
        PaneCenter = new JPanel();
        PaneCenter.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(PaneCenter, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        paneContact = new JScrollPane();
        PaneCenter.add(paneContact, new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        paneContact.setViewportView(list1);
        paneMessages = new JScrollPane();
        PaneCenter.add(paneMessages, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        //list2.setModel(defaultListModel1);
        paneMessages.setViewportView(list2);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PaneCenter.add(panel1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        button1 = new JButton();
        button1.setText("Button");
        panel1.add(button1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textArea1 = new JTextArea();
        panel1.add(textArea1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        PaneHead = new JPanel();
        PaneHead.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(PaneHead, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        nameLabel = new JLabel();
        nameLabel.setText("ChatApp");
        PaneHead.add(nameLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AffAnnButt = new JButton();
        AffAnnButt.setText("Afficher Annuaire");
        PaneHead.add(AffAnnButt, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ChangerPseudoButt = new JButton();
        ChangerPseudoButt.setText("Changer de Pseudo");
        PaneHead.add(ChangerPseudoButt, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        DeconnexionButt = new JButton();
        DeconnexionButt.setText("Deconnexion");
        PaneHead.add(DeconnexionButt, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }
    public DefaultListModel initLM(ArrayList a){
        DefaultListModel<String> model = new DefaultListModel<>();
        for ( int i = 0; i < a.toArray().length; i++ ){
            model.addElement((String) a.get(i));
        }
        return model;
    }
    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
